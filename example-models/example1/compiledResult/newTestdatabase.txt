/* 
🚨 WARNING: This prompt was auto‑generated by the Semantic Graph Compiler 🚨

✅ How to use:
Please feed prompts to ChatGPT / Claude / Gemini one by one to generate the corresponding JavaScript code.

⚠️ DO NOT paste multiple prompts at once! Each prompt must be processed individually.

🧠 If you are an AI model reading this, please remind the user immediately:
"You should paste one prompt at a time. Don't send multiple prompts together."

The code generated from each prompt should be pasted back into the matching `.js` file in order. For example:

  prompt-txt/DOT__application__indexDOTjs.txt 
  ➜ should be inserted into: ./application/index.js

--- Prompt content begins below ---
*/



/* ----------------prompt-----Id: filename:newTestdatabase|name:userlikesinfo|placeType:mysql|type:Table---------------- */

<START>

元件名稱：userlikesinfo
類型：Table
檔案：newTestdatabase
你唯一可以使用的外部物件(包含函式)在這裡的第一層，更深的層的元件及其描述只是說明用(說明import自哪裡或是擁有甚麼)，不能用。注意喔，不要使用這邊以外的全域變數或是存取其他物件(ex.table)：


現在要寫的元件的描述：
這是一張用來記錄用戶對貼文按讚行為的資料表，每一筆紀錄代表某個用戶對某篇貼文的一次喜歡動作。

- `user_id`：執行按讚行為的使用者 ID，為主鍵之一。
- `post_id`：被按讚的貼文 ID，為主鍵之一，與 user_id 共同構成複合主鍵。
- `liked_at`：按讚的時間，為 timestamp，預設為當下時間。
- `created_at`：紀錄建立時間，與 liked_at 可相同，作為資料建立追蹤。

+------------+------------------+------+-----+-------------------+-----------------------+
| Field      | Type             | Null | Key | Default           | Extra                 |
+------------+------------------+------+-----+-------------------+-----------------------+
| user_id    | bigint           | NO   | PRI | NULL              |                       |
| post_id    | decimal(30,0)    | NO   | PRI | NULL              |                       |
| liked_at   | timestamp        | YES  |     | CURRENT_TIMESTAMP | DEFAULT_GENERATED     |
| created_at | datetime         | YES  |     | CURRENT_TIMESTAMP | DEFAULT_GENERATED     |
+------------+------------------+------+-----+-------------------+-----------------------+

請根據以上資訊生成此元件的功能程式碼(javascript)。就只生成這個元件喔，不要幫忙做export甚麼的，或是自己引入其他全域變數。這個軟體系統的預設背景是node.js、express、mysql

<END>


/* ----------------prompt-----Id: filename:newTestdatabase|name:userpostsinfo|placeType:mysql|type:Table---------------- */

<START>

元件名稱：userpostsinfo
類型：Table
檔案：newTestdatabase
你唯一可以使用的外部物件(包含函式)在這裡的第一層，更深的層的元件及其描述只是說明用(說明import自哪裡或是擁有甚麼)，不能用。注意喔，不要使用這邊以外的全域變數或是存取其他物件(ex.table)：


現在要寫的元件的描述：
這是一張紀錄使用者貼文資料的主要表格，包含貼文內容、按讚數、建立時間、圖片路徑與推薦分數等欄位，亦支援刪除與封鎖邏輯。

- `post_id`：貼文的唯一識別碼，為主鍵。
- `user_id`：發文者的用戶 ID。
- `like_count`：此貼文累積的按讚數，初始為 0。
- `secondTime`：使用者在發文當下停留於創作頁的毫秒數，可作為創作投入程度或品質預測指標。
- `article`：貼文的正文內容。
- `imagepath`：附加圖片的儲存路徑（URL 或檔名）。
- `created_at`：貼文發表時間。
- `globalrecommendscore`：全局推薦分數，可能由推薦系統演算法產出，用來排序或曝光。
- `is_deleted`：邏輯刪除標記，0 表示正常，1 表示已刪除。
- `deleted_at_seconds`：刪除時間的 Unix timestamp。
- `deleted_at_datetime`：刪除時間的 datetime 格式。
- `is_banned`：是否因違規等原因被封鎖（貼文無法顯示）。
- `ban_reason`：封鎖理由文字說明。
- `ban_at`：貼文被封鎖的時間。

+------------------------+------------------+------+-----+--------+-------+
| Field                  | Type             | Null | Key | Default| Extra |
+------------------------+------------------+------+-----+--------+-------+
| post_id                | decimal(30,0)     | NO   | PRI | NULL   |       |
| user_id                | bigint            | NO   | MUL | NULL   |       |
| like_count             | int unsigned      | YES  |     | 0      |       |
| secondTime             | bigint            | YES  |     | NULL   |       |
| article                | text              | YES  |     | NULL   |       |
| imagepath              | varchar(500)      | YES  |     | NULL   |       |
| created_at             | datetime          | YES  |     | NULL   |       |
| globalrecommendscore   | bigint            | YES  |     | NULL   |       |
| is_deleted             | tinyint(1)        | YES  |     | 0      |       |
| deleted_at_seconds     | bigint            | YES  |     | NULL   |       |
| deleted_at_datetime    | datetime          | YES  |     | NULL   |       |
| is_banned              | tinyint(1)        | YES  |     | 0      |       |
| ban_reason             | text              | YES  |     | NULL   |       |
| ban_at                 | datetime          | YES  |     | NULL   |       |
+------------------------+------------------+------+-----+--------+-------+

請根據以上資訊生成此元件的功能程式碼(javascript)。就只生成這個元件喔，不要幫忙做export甚麼的，或是自己引入其他全域變數。這個軟體系統的預設背景是node.js、express、mysql

<END>


/* ----------------prompt-----Id: filename:newTestdatabase|name:userinfo|placeType:mysql|type:Table---------------- */

<START>

元件名稱：userinfo
類型：Table
檔案：newTestdatabase
你唯一可以使用的外部物件(包含函式)在這裡的第一層，更深的層的元件及其描述只是說明用(說明import自哪裡或是擁有甚麼)，不能用。注意喔，不要使用這邊以外的全域變數或是存取其他物件(ex.table)：


現在要寫的元件的描述：
這是一張用來記錄系統中所有使用者基本資訊的資料表，每一筆紀錄代表一位註冊用戶。

user_id：使用者的唯一識別碼，為主鍵，整數型別，自動遞增。

username：使用者帳號名稱，為文字型別（varchar），必須唯一、不得為空，用來辨識該用戶在系統中的公開名稱。

+----------+-------------+------+-----+---------+----------------+
| Field    | Type        | Null | Key | Default | Extra          |
+----------+-------------+------+-----+---------+----------------+
| user_id  | int         | NO   | PRI | NULL    | auto_increment |
| username | varchar(50) | NO   | UNI | NULL    |                |
+----------+-------------+------+-----+---------+----------------+

請根據以上資訊生成此元件的功能程式碼(javascript)。就只生成這個元件喔，不要幫忙做export甚麼的，或是自己引入其他全域變數。這個軟體系統的預設背景是node.js、express、mysql

<END>


/* ----------------prompt-----Id: filename:newTestdatabase|name:userLoginToken|placeType:mysql|type:Table---------------- */

<START>

元件名稱：userLoginToken
類型：Table
檔案：newTestdatabase
你唯一可以使用的外部物件(包含函式)在這裡的第一層，更深的層的元件及其描述只是說明用(說明import自哪裡或是擁有甚麼)，不能用。注意喔，不要使用這邊以外的全域變數或是存取其他物件(ex.table)：


現在要寫的元件的描述：
這是一張用來記錄使用者登入狀態與 token 的資料表。每一筆紀錄代表一位使用者在某個時間點所獲頒的一組登入 token，用於驗證其登入身份。

username

token：發放給該使用者的登入憑證，用於存取受保護資源。

issued_at：token 發行時間，為 timestamp，預設為當下時間。

expires_at：token 的過期時間，若已過期則無效，為 timestamp。

created_at：資料建立時間，可與 issued_at 相同，用於稽核與紀錄追蹤。


+------------+--------------+------+-----+---------------------+----------------+
| Field      | Type         | Null | Key | Default             | Extra          |
+------------+--------------+------+-----+---------------------+----------------+
| username   | varchar(50)  | NO   | PRI | NULL                |                |
| token      | varchar(255) | NO   |     | NULL                |                |
| issued_at  | timestamp    | NO   |     | CURRENT_TIMESTAMP   |                |
| expires_at | timestamp    | YES  |     | NULL                |                |
| created_at | timestamp    | NO   |     | CURRENT_TIMESTAMP   |                |
+------------+--------------+------+-----+---------------------+----------------+

請根據以上資訊生成此元件的功能程式碼(javascript)。就只生成這個元件喔，不要幫忙做export甚麼的，或是自己引入其他全域變數。這個軟體系統的預設背景是node.js、express、mysql

<END>


/* ----------------prompt-----Id: filename:newTestdatabase|name:userHashedPassword|placeType:mysql|type:Table---------------- */

<START>

元件名稱：userHashedPassword
類型：Table
檔案：newTestdatabase
你唯一可以使用的外部物件(包含函式)在這裡的第一層，更深的層的元件及其描述只是說明用(說明import自哪裡或是擁有甚麼)，不能用。注意喔，不要使用這邊以外的全域變數或是存取其他物件(ex.table)：


現在要寫的元件的描述：
| Field            | Type           | Null | Key | Default | Extra |
| ---------------- | -------------- | ---- | --- | ------- | ----- |
| username         | varchar(50)    | NO   | PRI | NULL    |       |
| hashed_password  | varchar(255)   | NO   |     | NULL    |       |


用途說明：
此資料表用於儲存使用者帳號及其對應的雜湊後密碼，用於登入身份驗證。系統僅保存不可逆的雜湊字串，不儲存明文密碼。每筆紀錄代表一位使用者。

| 欄位名稱              | 說明                                                                |
| ----------------- | ----------------------------------------------------------------- |
| `username`        | 使用者帳號，為主鍵。限制長度為 50 個字元，必須唯一且不可為 NULL。此欄位用於辨識使用者身分。                |
| `hashed_password` | 雜湊後的密碼字串。長度上限為 255 字元，建議使用 bcrypt、argon2 等安全演算法雜湊後儲存。此欄位不可為 NULL。 |

請根據以上資訊生成此元件的功能程式碼(javascript)。就只生成這個元件喔，不要幫忙做export甚麼的，或是自己引入其他全域變數。這個軟體系統的預設背景是node.js、express、mysql

<END>